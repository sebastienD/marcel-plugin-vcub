{"version":3,"sources":["main.js"],"names":["MarcelPluginVcub","Marcel","Plugin","root","document","getElementById","map","dataBordeauxUrl","mapView","L","setView","tileLayer","maxZoom","attribution","addTo","circle","color","fillColor","fillOpacity","radius","bindPopup","openPopup","apiKey","fetch","replace","then","response","json","props","getData","data","initMapView","features","feat","coord","geometry","coordinates","properties","popupText","nom","nbelec","nbclassiq","nbplaces","bikeMarker","AwesomeMarkers","icon","prefix","iconColor","markerColor","marker","stylesvar","style","fontFamily","init","changeProps"],"mappings":"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","file":"main.c8dcd0eb.js","sourceRoot":"src","sourcesContent":["class MarcelPluginVcub extends Marcel.Plugin {\n\n  constructor() {\n    super()\n    this.root = document.getElementById('root')\n    this.map = document.getElementById('map')\n    this.dataBordeauxUrl='https://data.bordeaux-metropole.fr/geojson?key={{key}}&typename=ci_vcub_p'\n    //this.mapView = this.initMapView()\n  }\n\n  // http://tile.stamen.com/watercolor/{z}/{x}/{y}.png\n  // http://stamen-tiles-{s}.a.ssl.fastly.net/toner/{z}/{x}/{y}.png\n  // https://tile.openstreetmap.org/{z}/{x}/{y}.png\n  // https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\n  // https://{s}.tile.thunderforest.com/transport-dark/{z}/{x}/{y}.png?apikey=51f85a703deb42e8b08f851691bdc63a\n\n\n\n  initMapView() {\n    var mapView = L.map('map').setView([44.886937, -0.56695972], 14);\n    L.tileLayer('https://{s}.tile.thunderforest.com/transport-dark/{z}/{x}/{y}.png?apikey=51f85a703deb42e8b08f851691bdc63a', {\n        maxZoom: 19,\n        attribution: '&copy; <a href=\"http://www.thunderforest.com/\">Thunderforest</a>, &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(mapView);\n\n    var circle = L.circle([44.88797, -0.567169], {\n        color: '#EE2238',\n        fillColor: '#EE2238',\n        fillOpacity: 0.5,\n        radius: 130\n    }).addTo(mapView);\n    circle.bindPopup(\"Je suis √† Bdx.io üòé\").openPopup();\n\n    return mapView\n  }\n\n  getData(apiKey) {\n    return fetch(this.dataBordeauxUrl.replace('{{key}}', apiKey))\n        .then(response => response.json())\n  }\n\n  propsDidChange() {\n      const { apiKey } = this.props\n      this.getData(apiKey).then(data => {\n          // console.log(data)\n          let mapView = this.initMapView()\n          data.features.map(feat => {\n              let coord = feat.geometry.coordinates;\n              let properties = feat.properties;\n\n              var popupText = `<strong>Station :</strong> ${properties.nom}<br>üîã <strong>V√©los √©lectriques : </strong>${properties.nbelec}<br> üö¥‚Äç‚ôÄÔ∏è <strong>V√©los classiques : </strong>${properties.nbclassiq} <br> üÖøÔ∏è <strong>Places : </strong>${properties.nbplaces}`;\n\n              // specify popup options \n              var customOptions = {'className' : 'popupCustom'}\n\n              var bikeMarker = L.AwesomeMarkers.icon({\n                prefix: 'bi',\n                icon: 'bicycle',\n                iconColor: 'white',\n                markerColor: 'purple'\n              });\n\n              var marker = L.marker([coord[1], coord[0]], {icon: bikeMarker}).addTo(mapView);\n              marker.bindPopup(popupText,customOptions); \n          })\n      })\n  }\n\n  render() {\n    const { apiKey, stylesvar = {} } = this.props\n\n    // stylesvar is a special property containing the global media theme.\n    // You should use it to have a consistent style accross all the media.\n    if (stylesvar['primary-color']) this.root.style.color = stylesvar['primary-color']\n    if (stylesvar['font-family']) this.root.style.fontFamily = stylesvar['font-family']\n  }\n}\n\nMarcel.init(MarcelPluginVcub)\n\n// uncomment this line to try the plugin in a browser :\nMarcel.changeProps({ apiKey: '334BCKOWWZ' })\n"]}