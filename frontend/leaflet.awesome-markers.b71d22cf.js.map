{"version":3,"sources":["../node_modules/leaflet.awesome-markers/dist/leaflet.awesome-markers.js"],"names":[],"mappings":";CAUA,SAAA,EAAA,EAAA,GACA,aAKA,EAAA,eAAA,GAEA,EAAA,eAAA,QAAA,QAEA,EAAA,eAAA,KAAA,EAAA,KAAA,OAAA,CACA,QAAA,CACA,SAAA,CAAA,GAAA,IACA,WAAA,CAAA,GAAA,IACA,YAAA,CAAA,GAAA,IACA,aAAA,CAAA,GAAA,IACA,WAAA,CAAA,GAAA,IACA,UAAA,iBACA,OAAA,YACA,UAAA,UACA,aAAA,GACA,KAAA,OACA,YAAA,OACA,UAAA,SAGA,WAAA,SAAA,GACA,EAAA,EAAA,KAAA,WAAA,KAAA,IAGA,WAAA,WACA,IAAA,EAAA,EAAA,cAAA,OACA,EAAA,KAAA,QAYA,OAVA,EAAA,OACA,EAAA,UAAA,KAAA,gBAGA,EAAA,QACA,EAAA,MAAA,oBACA,EAAA,MAAA,EAAA,OAAA,EAAA,MAAA,EAAA,MAGA,KAAA,eAAA,EAAA,QAAA,EAAA,aACA,GAGA,aAAA,WACA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,QAoBA,OAjBA,EADA,EAAA,KAAA,MAAA,EAAA,EAAA,OAAA,OAAA,KAAA,EAAA,OAAA,IACA,EAAA,KAEA,EAAA,OAAA,IAAA,EAAA,KAGA,EAAA,MAAA,iBAAA,EAAA,YACA,EAAA,EAAA,WAGA,EAAA,YACA,UAAA,EAAA,WAAA,UAAA,EAAA,UACA,EAAA,QAAA,EAAA,UAEA,EAAA,iBAAA,EAAA,UAAA,MAIA,MAAA,EAAA,UAAA,EAAA,aAAA,IAAA,EAAA,OAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,UAGA,eAAA,SAAA,EAAA,GACA,IAEA,EAFA,EAAA,KAAA,QACA,EAAA,EAAA,MAAA,EAAA,WAAA,EAAA,aAAA,eAIA,EADA,WAAA,EACA,EAAA,MAAA,EAAA,cAAA,EAAA,YAEA,EAAA,MAAA,EAAA,cAGA,IACA,EAAA,EAAA,SAAA,GAAA,IAGA,EAAA,UAAA,kBAAA,EAAA,IAAA,EAAA,UAEA,IACA,EAAA,MAAA,YAAA,EAAA,EAAA,KACA,EAAA,MAAA,WAAA,EAAA,EAAA,MAGA,IACA,EAAA,MAAA,MAAA,EAAA,EAAA,KACA,EAAA,MAAA,OAAA,EAAA,EAAA,OAIA,aAAA,WACA,IAAA,EAAA,EAAA,cAAA,OAGA,OADA,KAAA,eAAA,EAAA,UACA,KAIA,EAAA,eAAA,KAAA,SAAA,GACA,OAAA,IAAA,EAAA,eAAA,KAAA,IA5GA,CA+GA,EAAA","file":"leaflet.awesome-markers.b71d22cf.js","sourceRoot":"src","sourcesContent":["/*\n  Leaflet.AwesomeMarkers, a plugin that adds colorful iconic markers for Leaflet, based on the Font Awesome icons\n  (c) 2012-2013, Lennard Voogdt\n\n  http://leafletjs.com\n  https://github.com/lvoogdt\n*/\n\n/*global L*/\n\n(function (window, document, undefined) {\n    \"use strict\";\n    /*\n     * Leaflet.AwesomeMarkers assumes that you have already included the Leaflet library.\n     */\n\n    L.AwesomeMarkers = {};\n\n    L.AwesomeMarkers.version = '2.0.1';\n\n    L.AwesomeMarkers.Icon = L.Icon.extend({\n        options: {\n            iconSize: [35, 45],\n            iconAnchor:   [17, 42],\n            popupAnchor: [1, -32],\n            shadowAnchor: [10, 12],\n            shadowSize: [36, 16],\n            className: 'awesome-marker',\n            prefix: 'glyphicon',\n            spinClass: 'fa-spin',\n            extraClasses: '',\n            icon: 'home',\n            markerColor: 'blue',\n            iconColor: 'white'\n        },\n\n        initialize: function (options) {\n            options = L.Util.setOptions(this, options);\n        },\n\n        createIcon: function () {\n            var div = document.createElement('div'),\n                options = this.options;\n\n            if (options.icon) {\n                div.innerHTML = this._createInner();\n            }\n\n            if (options.bgPos) {\n                div.style.backgroundPosition =\n                    (-options.bgPos.x) + 'px ' + (-options.bgPos.y) + 'px';\n            }\n\n            this._setIconStyles(div, 'icon-' + options.markerColor);\n            return div;\n        },\n\n        _createInner: function() {\n            var iconClass, iconSpinClass = \"\", iconColorClass = \"\", iconColorStyle = \"\", options = this.options;\n\n            if(options.icon.slice(0,options.prefix.length+1) === options.prefix + \"-\") {\n                iconClass = options.icon;\n            } else {\n                iconClass = options.prefix + \"-\" + options.icon;\n            }\n\n            if(options.spin && typeof options.spinClass === \"string\") {\n                iconSpinClass = options.spinClass;\n            }\n\n            if(options.iconColor) {\n                if(options.iconColor === 'white' || options.iconColor === 'black') {\n                    iconColorClass = \"icon-\" + options.iconColor;\n                } else {\n                    iconColorStyle = \"style='color: \" + options.iconColor + \"' \";\n                }\n            }\n\n            return \"<i \" + iconColorStyle + \"class='\" + options.extraClasses + \" \" + options.prefix + \" \" + iconClass + \" \" + iconSpinClass + \" \" + iconColorClass + \"'></i>\";\n        },\n\n        _setIconStyles: function (img, name) {\n            var options = this.options,\n                size = L.point(options[name === 'shadow' ? 'shadowSize' : 'iconSize']),\n                anchor;\n\n            if (name === 'shadow') {\n                anchor = L.point(options.shadowAnchor || options.iconAnchor);\n            } else {\n                anchor = L.point(options.iconAnchor);\n            }\n\n            if (!anchor && size) {\n                anchor = size.divideBy(2, true);\n            }\n\n            img.className = 'awesome-marker-' + name + ' ' + options.className;\n\n            if (anchor) {\n                img.style.marginLeft = (-anchor.x) + 'px';\n                img.style.marginTop  = (-anchor.y) + 'px';\n            }\n\n            if (size) {\n                img.style.width  = size.x + 'px';\n                img.style.height = size.y + 'px';\n            }\n        },\n\n        createShadow: function () {\n            var div = document.createElement('div');\n\n            this._setIconStyles(div, 'shadow');\n            return div;\n      }\n    });\n        \n    L.AwesomeMarkers.icon = function (options) {\n        return new L.AwesomeMarkers.Icon(options);\n    };\n\n}(this, document));\n\n\n\n"]}